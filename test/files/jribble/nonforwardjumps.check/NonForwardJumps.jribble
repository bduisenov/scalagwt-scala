public class LNonForwardJumps; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  
  public I; fact(I; n) {
    return this.(LNonForwardJumps;::tailfact$1(I;I;)I;)(n, 1);
  }
  
  private final I; tailfact$1(I; n, I; res) {
    LNonForwardJumps; _$this = this;
    LNonForwardJumps; _$this;
    I; n;
    I; res;
    I; $1$;
    _tailfact: while(true) {
      I; $2$;
      if (n == 0)
        {
          $2$ = res;
        }
      else
        {
          _$this = this;
          n = n - 1;
          res = res * n;
          continue _tailfact;
          $2$ = ();
        }
      $1$ = $2$;
      break;
    }
    return $1$;
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
  }
}
